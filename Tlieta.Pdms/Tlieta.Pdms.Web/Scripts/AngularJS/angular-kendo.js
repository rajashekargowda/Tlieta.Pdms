/*! angular-kendo 0.6.0 2013-12-17 */
!function (a, b) { var c, d, e, f, g = a.module("kendo.directives", []), h = { dataSource: function () { var a = { TreeView: "HierarchicalDataSource", Scheduler: "SchedulerDataSource" }, b = function (a, b) { return kendo.data[b].create(a) }, c = function (c, d, e, f) { var g = a[f] || "DataSource", h = b(c.$eval(e.kDataSource), g); return d.data("$kendoDataSource", h), c.$watch(e.kDataSource, function (a, c) { a !== c && d.data("$kendoDataSource", b(g, a)) }), h }; return { create: c } }(), widget: function () { var d, e, g, j, k = { kDataSource: !0, kOptions: !0, kRebind: !0 }, l = function (b, e) { var g, h, i, l = /k(On)?([A-Z].*)/; k[e.name] || (g = e.name.match(l), g && (h = g[2].charAt(0).toLowerCase() + g[2].slice(1), g[1] ? (i = c(e.value), b[h] = function (a) { "$apply" === d.$root.$$phase || "$digest" === d.$root.$$phase ? i({ kendoEvent: a }) : d.$apply(function () { i(d, { kendoEvent: a }) }) }) : (b[h] = a.copy(d.$eval(e.value)), void 0 === b[h] && e.value.match(/^\w*$/) && f.warn(j + "'s " + e.name + " attribute resolved to undefined. Maybe you meant to use a string literal like: '" + e.value + "'?")))) }, m = function () { var c = a.extend({}, d.$eval(g.kOptions)); return b.each(g, function (a, b) { l(c, { name: a, value: b }) }), c.dataSource = e.inheritedData("$kendoDataSource") || c.dataSource, c }, n = function (a, c, f, k) { d = a, e = c, j = k, g = f; var l = m(), n = j.replace("kendo", ""); return g.kDataSource && (l.dataSource = h.dataSource.create(d, e, g, n)), i[n] && i[n](d, e, l, g), b(e)[j](l).data(j) }; return { create: n } }() }, i = { Grid: function (b, d, f, g) { f.dataBound = function () { var a = d.data("kendoGrid"), c = a.tbody.children("tr"); c.each(function (c, d) { var f = b.$new(); f.$index = c, f.dataItem = a.dataItem(d), e(d)(f) }) }, f.dataBinding = function () { var b = d.data("kendoGrid").tbody.children("tr.ng-scope"); b.each(function (b, c) { var d = a.element(c).scope(); d.$destroy() }) }, f.change = function (d) { var e, h, i, j, k, l, m = { kendoEvent: d }; a.isString(f.selectable) && (e = -1 !== f.selectable.indexOf("cell"), h = -1 !== f.selectable.indexOf("multiple")), i = m.selected = this.select(), j = m.data = [], k = m.columns = []; for (var n = 0; n < i.length; n++) { var o = this.dataItem(e ? i[n].parentNode : i[n]); e ? (a.element.inArray(o, j) < 0 && j.push(o), l = a.element(i[n]).index(), a.element.inArray(l, k) < 0 && k.push(l)) : j.push(o) } h || (m.data = j[0], m.selected = i[0]), b.$apply(function () { var a = c(g.kOnChange); a(b, m) }) } } }; g.factory("directiveFactory", ["$timeout", "$parse", "$compile", "$log", function (a, b, g, i) { function j(a, c, d, e) { if (d[e]) { var f = b(d[e]).assign; if (!f) throw new Error(e + " attribute used but expression in it is not assignable: " + d[e]); f(c, a) } } d = a, c = b, e = g, f = i; var k = function (a) { return { restrict: "ACE", transclude: !0, require: "?ngModel", scope: !1, controller: ["$scope", "$attrs", "$element", "$transclude", function (a, b, c, d) { d(function (a) { c.append(a) }) }], link: function (b, c, e, f) { d(function () { var d = h.widget.create(b, c, e, a); if (j(d, b, e, a), e.kRebind && b.$watch(e.kRebind, function (f, g) { f !== g && (d = h.widget.create(b, c, e, a), j(d, b, e, a)) }, !0), b.$on("$destroy", function () { d.destroy() }), f) { if (!d.value) throw new Error("ng-model used but " + a + " does not define a value accessor"); f.$render = function () { d.value(f.$viewValue || null) }, void 0 !== d.value && d.value(f.$viewValue || null), d.bind("change", function () { "$apply" === b.$root.$$phase || "$digest" === b.$root.$$phase ? f.$setViewValue(d.value()) : b.$apply(function () { f.$setViewValue(d.value()) }) }) } }) } } }; return { create: k } }]), a.forEach([kendo.ui, kendo.dataviz && kendo.dataviz.ui], function (b) { a.forEach(b, function (a, b) { if (b.match(/^[A-Z]/) && "Widget" !== b) { var c = "kendo" + b; g.directive(c, ["directiveFactory", function (a) { return a.create(c) }]) } }) }) }(angular, jQuery);