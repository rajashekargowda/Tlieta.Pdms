<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="settingsTile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rCasidWDFH8Dt0N4UOWG1+4AAAAASUVORK5CYII=
</value>
  </data>
</root>